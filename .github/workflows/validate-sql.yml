name: Validate SQL Files

on:
  pull_request:
    paths:
      - "**.sql"

jobs:
  validate-sql:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PostgreSQL
        run: |
          docker run -d --name postgres -e POSTGRES_PASSWORD=postgres -p 5432:5432 postgres:14
          sleep 5

      - name: Validate SQL syntax
        id: syntax
        run: |
          error_log=""
          for file in $(find . -name "*.sql"); do
            echo "Executing syntax validation of $file..."
            output=$(PGPASSWORD=postgres psql -h localhost -U postgres -d postgres -v ON_ERROR_STOP=1 -c "\i $file" 2>&1) || {
              # Simplify error message and clean special characters
              cleaned_output=$(echo "$output" | tr '\n' ' ' | sed 's/"/'"'"'/g')
              error_log="${error_log}Error in ${file}: ${cleaned_output}. "
              
              # Create a more specific error for GitHub annotations
              error_line=$(echo "$output" | grep -o "line [0-9]*" | head -1 || echo "unknown line")
              error_msg=$(echo "$output" | grep -o "ERROR:.*" | head -1 || echo "Syntax error")
              echo "::error file=${file},${error_line}::${error_msg}"
              exit_code=1
            }
          done

          if [ -n "$error_log" ]; then
            echo "error_log=${error_log}" >> $GITHUB_ENV
          fi

          exit ${exit_code:-0}
        continue-on-error: true

      - name: Check for matching V/R files
        id: matching
        run: |
          error_log=""
          for vfile in $(find . -name "V*.sql"); do
            rfile="${vfile/V/R}"
            if [ ! -f "$rfile" ]; then
              error_log="${error_log}Missing rollback file for ${vfile}. "
              echo "::error file=${vfile}::Missing rollback file (${rfile})"
              exit_code=1
            fi
          done

          if [ -n "$error_log" ]; then
            echo "error_log_matching=${error_log}" >> $GITHUB_ENV
          fi

          exit ${exit_code:-0}
        continue-on-error: true

      - name: Fail if any validation failed
        if: steps.syntax.outcome == 'failure' || steps.matching.outcome == 'failure'
        run: |
          echo "SQL validation failed!"
          if [ "${{ steps.syntax.outcome }}" == "failure" ]; then
            echo "Syntax errors:"
            echo "${{ env.error_log }}"
          fi
          if [ "${{ steps.matching.outcome }}" == "failure" ]; then
            echo "Missing rollback files:"
            echo "${{ env.error_log_matching }}"
          fi
          exit 1

      - name: Notify Slack on Failure
        uses: 8398a7/action-slack@v3
        if: failure()
        with:
          status: custom
          fields: ""
          custom_payload: |
            {
              "text": "ðŸš« *SQL validation failed*",
              "attachments": [{
                "color": "danger",
                "fields": [
                  {
                    "title": "Repository",
                    "value": "${{ github.repository }}",
                    "short": true
                  },
                  {
                    "title": "Pull Request",
                    "value": "<https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}|#${{ github.event.pull_request.number }}>",
                    "short": true
                  },
                  {
                    "title": "Workflow",
                    "value": "${{ github.workflow }}",
                    "short": true
                  },
                  {
                    "title": "Author",
                    "value": "@${{ github.event.pull_request.user.login }}",
                    "short": true
                  }
                ],
                "text": "*Error details:*\n${{ env.error_log }}${{ env.error_log_matching }}"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
